/**
 * This class is generated by jOOQ
 */
package jooq.tables.daos;


import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import jooq.tables.Student;
import jooq.tables.records.StudentRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentDao extends DAOImpl<StudentRecord, jooq.tables.pojos.Student, Integer> {

	/**
	 * Create a new StudentDao without any configuration
	 */
	public StudentDao() {
		super(Student.STUDENT, jooq.tables.pojos.Student.class);
	}

	/**
	 * Create a new StudentDao with an attached configuration
	 */
	public StudentDao(Configuration configuration) {
		super(Student.STUDENT, jooq.tables.pojos.Student.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(jooq.tables.pojos.Student object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByName(String... values) {
		return fetch(Student.STUDENT.NAME, values);
	}

	/**
	 * Fetch records that have <code>phonenumber IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByPhonenumber(String... values) {
		return fetch(Student.STUDENT.PHONENUMBER, values);
	}

	/**
	 * Fetch records that have <code>email IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByEmail(String... values) {
		return fetch(Student.STUDENT.EMAIL, values);
	}

	/**
	 * Fetch records that have <code>datejoined IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByDatejoined(Date... values) {
		return fetch(Student.STUDENT.DATEJOINED, values);
	}

	/**
	 * Fetch records that have <code>streetaddress IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByStreetaddress(String... values) {
		return fetch(Student.STUDENT.STREETADDRESS, values);
	}

	/**
	 * Fetch records that have <code>city IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByCity(String... values) {
		return fetch(Student.STUDENT.CITY, values);
	}

	/**
	 * Fetch records that have <code>region IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByRegion(String... values) {
		return fetch(Student.STUDENT.REGION, values);
	}

	/**
	 * Fetch records that have <code>country IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByCountry(String... values) {
		return fetch(Student.STUDENT.COUNTRY, values);
	}

	/**
	 * Fetch records that have <code>postalorzip IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByPostalorzip(String... values) {
		return fetch(Student.STUDENT.POSTALORZIP, values);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByDescription(String... values) {
		return fetch(Student.STUDENT.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>age IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchByAge(Integer... values) {
		return fetch(Student.STUDENT.AGE, values);
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<jooq.tables.pojos.Student> fetchById(Integer... values) {
		return fetch(Student.STUDENT.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public jooq.tables.pojos.Student fetchOneById(Integer value) {
		return fetchOne(Student.STUDENT.ID, value);
	}
}

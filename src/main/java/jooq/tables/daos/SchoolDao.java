/**
 * This class is generated by jOOQ
 */
package jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.tables.School;
import jooq.tables.records.SchoolRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolDao extends DAOImpl<SchoolRecord, jooq.tables.pojos.School, Integer> {

	/**
	 * Create a new SchoolDao without any configuration
	 */
	public SchoolDao() {
		super(School.SCHOOL, jooq.tables.pojos.School.class);
	}

	/**
	 * Create a new SchoolDao with an attached configuration
	 */
	public SchoolDao(Configuration configuration) {
		super(School.SCHOOL, jooq.tables.pojos.School.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(jooq.tables.pojos.School object) {
		return object.getSchoold();
	}

	/**
	 * Fetch records that have <code>schoold IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchBySchoold(Integer... values) {
		return fetch(School.SCHOOL.SCHOOLD, values);
	}

	/**
	 * Fetch a unique record that has <code>schoold = value</code>
	 */
	public jooq.tables.pojos.School fetchOneBySchoold(Integer value) {
		return fetchOne(School.SCHOOL.SCHOOLD, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByName(String... values) {
		return fetch(School.SCHOOL.NAME, values);
	}

	/**
	 * Fetch records that have <code>schooltype IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchBySchooltype(String... values) {
		return fetch(School.SCHOOL.SCHOOLTYPE, values);
	}

	/**
	 * Fetch records that have <code>city IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByCity(String... values) {
		return fetch(School.SCHOOL.CITY, values);
	}

	/**
	 * Fetch records that have <code>provinceorstate IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByProvinceorstate(String... values) {
		return fetch(School.SCHOOL.PROVINCEORSTATE, values);
	}

	/**
	 * Fetch records that have <code>established IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByEstablished(String... values) {
		return fetch(School.SCHOOL.ESTABLISHED, values);
	}

	/**
	 * Fetch records that have <code>totalstudents IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByTotalstudents(Integer... values) {
		return fetch(School.SCHOOL.TOTALSTUDENTS, values);
	}

	/**
	 * Fetch records that have <code>wikilink IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByWikilink(String... values) {
		return fetch(School.SCHOOL.WIKILINK, values);
	}

	/**
	 * Fetch records that have <code>logosrc IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByLogosrc(String... values) {
		return fetch(School.SCHOOL.LOGOSRC, values);
	}

	/**
	 * Fetch records that have <code>country IN (values)</code>
	 */
	public List<jooq.tables.pojos.School> fetchByCountry(String... values) {
		return fetch(School.SCHOOL.COUNTRY, values);
	}
}

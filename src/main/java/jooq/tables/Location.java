/**
 * This class is generated by jOOQ
 */
package jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.Keys;
import jooq.Public;
import jooq.tables.records.LocationRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Location extends TableImpl<LocationRecord> {

	private static final long serialVersionUID = -1169752548;

	/**
	 * The reference instance of <code>public.location</code>
	 */
	public static final Location LOCATION = new Location();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LocationRecord> getRecordType() {
		return LocationRecord.class;
	}

	/**
	 * The column <code>public.location.location_id</code>.
	 */
	public final TableField<LocationRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.location.city</code>.
	 */
	public final TableField<LocationRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.location.state_or_province</code>.
	 */
	public final TableField<LocationRecord, String> STATE_OR_PROVINCE = createField("state_or_province", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.location.zip_or_postalcode</code>.
	 */
	public final TableField<LocationRecord, String> ZIP_OR_POSTALCODE = createField("zip_or_postalcode", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.location.country</code>.
	 */
	public final TableField<LocationRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>public.location</code> table reference
	 */
	public Location() {
		this("location", null);
	}

	/**
	 * Create an aliased <code>public.location</code> table reference
	 */
	public Location(String alias) {
		this(alias, LOCATION);
	}

	private Location(String alias, Table<LocationRecord> aliased) {
		this(alias, aliased, null);
	}

	private Location(String alias, Table<LocationRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LocationRecord> getPrimaryKey() {
		return Keys.LOCATION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LocationRecord>> getKeys() {
		return Arrays.<UniqueKey<LocationRecord>>asList(Keys.LOCATION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Location as(String alias) {
		return new Location(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Location rename(String name) {
		return new Location(name, null);
	}
}

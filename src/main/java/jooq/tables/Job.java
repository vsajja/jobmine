/**
 * This class is generated by jOOQ
 */
package jooq.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.Keys;
import jooq.Public;
import jooq.tables.records.JobRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Job extends TableImpl<JobRecord> {

	private static final long serialVersionUID = 1907925333;

	/**
	 * The reference instance of <code>public.job</code>
	 */
	public static final Job JOB = new Job();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<JobRecord> getRecordType() {
		return JobRecord.class;
	}

	/**
	 * The column <code>public.job.jobpostingid</code>.
	 */
	public final TableField<JobRecord, Integer> JOBPOSTINGID = createField("jobpostingid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.job.title</code>.
	 */
	public final TableField<JobRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.description	</code>.
	 */
	public final TableField<JobRecord, String> DESCRIPTION_9 = createField("description	", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.location</code>.
	 */
	public final TableField<JobRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.datePosted	</code>.
	 */
	public final TableField<JobRecord, Date> DATEPOSTED_9 = createField("datePosted	", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>public.job.employername</code>.
	 */
	public final TableField<JobRecord, String> EMPLOYERNAME = createField("employername", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.job.employerlogo</code>.
	 */
	public final TableField<JobRecord, byte[]> EMPLOYERLOGO = createField("employerlogo", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * Create a <code>public.job</code> table reference
	 */
	public Job() {
		this("job", null);
	}

	/**
	 * Create an aliased <code>public.job</code> table reference
	 */
	public Job(String alias) {
		this(alias, JOB);
	}

	private Job(String alias, Table<JobRecord> aliased) {
		this(alias, aliased, null);
	}

	private Job(String alias, Table<JobRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<JobRecord, Integer> getIdentity() {
		return Keys.IDENTITY_JOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<JobRecord> getPrimaryKey() {
		return Keys.JOB_POSTING_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<JobRecord>> getKeys() {
		return Arrays.<UniqueKey<JobRecord>>asList(Keys.JOB_POSTING_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Job as(String alias) {
		return new Job(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Job rename(String name) {
		return new Job(name, null);
	}
}

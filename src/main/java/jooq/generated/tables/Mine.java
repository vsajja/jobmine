/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.MineRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mine extends TableImpl<MineRecord> {

	private static final long serialVersionUID = -1371507763;

	/**
	 * The reference instance of <code>public.mine</code>
	 */
	public static final Mine MINE = new Mine();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MineRecord> getRecordType() {
		return MineRecord.class;
	}

	/**
	 * The column <code>public.mine.mine_id</code>.
	 */
	public final TableField<MineRecord, Integer> MINE_ID = createField("mine_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.mine.name</code>.
	 */
	public final TableField<MineRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>public.mine</code> table reference
	 */
	public Mine() {
		this("mine", null);
	}

	/**
	 * Create an aliased <code>public.mine</code> table reference
	 */
	public Mine(String alias) {
		this(alias, MINE);
	}

	private Mine(String alias, Table<MineRecord> aliased) {
		this(alias, aliased, null);
	}

	private Mine(String alias, Table<MineRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MineRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MINE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MineRecord> getPrimaryKey() {
		return Keys.MINE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MineRecord>> getKeys() {
		return Arrays.<UniqueKey<MineRecord>>asList(Keys.MINE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Mine as(String alias) {
		return new Mine(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Mine rename(String name) {
		return new Mine(name, null);
	}
}

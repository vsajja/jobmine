/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobInterview implements Serializable {

	private static final long serialVersionUID = 1997615245;

	private final Long      jobInterviewId;
	private final String    status;
	private final Timestamp createdTimestamp;
	private final Integer   jobId;
	private final Integer   studentId;
	private final Integer   locationId;

	public JobInterview(JobInterview value) {
		this.jobInterviewId = value.jobInterviewId;
		this.status = value.status;
		this.createdTimestamp = value.createdTimestamp;
		this.jobId = value.jobId;
		this.studentId = value.studentId;
		this.locationId = value.locationId;
	}

	public JobInterview(
		Long      jobInterviewId,
		String    status,
		Timestamp createdTimestamp,
		Integer   jobId,
		Integer   studentId,
		Integer   locationId
	) {
		this.jobInterviewId = jobInterviewId;
		this.status = status;
		this.createdTimestamp = createdTimestamp;
		this.jobId = jobId;
		this.studentId = studentId;
		this.locationId = locationId;
	}

	public Long getJobInterviewId() {
		return this.jobInterviewId;
	}

	public String getStatus() {
		return this.status;
	}

	public Timestamp getCreatedTimestamp() {
		return this.createdTimestamp;
	}

	public Integer getJobId() {
		return this.jobId;
	}

	public Integer getStudentId() {
		return this.studentId;
	}

	public Integer getLocationId() {
		return this.locationId;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final JobInterview other = (JobInterview) obj;
		if (jobInterviewId == null) {
			if (other.jobInterviewId != null)
				return false;
		}
		else if (!jobInterviewId.equals(other.jobInterviewId))
			return false;
		if (status == null) {
			if (other.status != null)
				return false;
		}
		else if (!status.equals(other.status))
			return false;
		if (createdTimestamp == null) {
			if (other.createdTimestamp != null)
				return false;
		}
		else if (!createdTimestamp.equals(other.createdTimestamp))
			return false;
		if (jobId == null) {
			if (other.jobId != null)
				return false;
		}
		else if (!jobId.equals(other.jobId))
			return false;
		if (studentId == null) {
			if (other.studentId != null)
				return false;
		}
		else if (!studentId.equals(other.studentId))
			return false;
		if (locationId == null) {
			if (other.locationId != null)
				return false;
		}
		else if (!locationId.equals(other.locationId))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((jobInterviewId == null) ? 0 : jobInterviewId.hashCode());
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		result = prime * result + ((createdTimestamp == null) ? 0 : createdTimestamp.hashCode());
		result = prime * result + ((jobId == null) ? 0 : jobId.hashCode());
		result = prime * result + ((studentId == null) ? 0 : studentId.hashCode());
		result = prime * result + ((locationId == null) ? 0 : locationId.hashCode());
		return result;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("JobInterview (");

		sb.append(jobInterviewId);
		sb.append(", ").append(status);
		sb.append(", ").append(createdTimestamp);
		sb.append(", ").append(jobId);
		sb.append(", ").append(studentId);
		sb.append(", ").append(locationId);

		sb.append(")");
		return sb.toString();
	}
}

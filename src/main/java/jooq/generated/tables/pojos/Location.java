/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Location implements Serializable {

	private static final long serialVersionUID = -190034800;

	private final Long   locationId;
	private final String city;
	private final String stateOrProvince;
	private final String zipOrPostalcode;
	private final String country;

	public Location(Location value) {
		this.locationId = value.locationId;
		this.city = value.city;
		this.stateOrProvince = value.stateOrProvince;
		this.zipOrPostalcode = value.zipOrPostalcode;
		this.country = value.country;
	}

	public Location(
		Long   locationId,
		String city,
		String stateOrProvince,
		String zipOrPostalcode,
		String country
	) {
		this.locationId = locationId;
		this.city = city;
		this.stateOrProvince = stateOrProvince;
		this.zipOrPostalcode = zipOrPostalcode;
		this.country = country;
	}

	public Long getLocationId() {
		return this.locationId;
	}

	public String getCity() {
		return this.city;
	}

	public String getStateOrProvince() {
		return this.stateOrProvince;
	}

	public String getZipOrPostalcode() {
		return this.zipOrPostalcode;
	}

	public String getCountry() {
		return this.country;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final Location other = (Location) obj;
		if (locationId == null) {
			if (other.locationId != null)
				return false;
		}
		else if (!locationId.equals(other.locationId))
			return false;
		if (city == null) {
			if (other.city != null)
				return false;
		}
		else if (!city.equals(other.city))
			return false;
		if (stateOrProvince == null) {
			if (other.stateOrProvince != null)
				return false;
		}
		else if (!stateOrProvince.equals(other.stateOrProvince))
			return false;
		if (zipOrPostalcode == null) {
			if (other.zipOrPostalcode != null)
				return false;
		}
		else if (!zipOrPostalcode.equals(other.zipOrPostalcode))
			return false;
		if (country == null) {
			if (other.country != null)
				return false;
		}
		else if (!country.equals(other.country))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((locationId == null) ? 0 : locationId.hashCode());
		result = prime * result + ((city == null) ? 0 : city.hashCode());
		result = prime * result + ((stateOrProvince == null) ? 0 : stateOrProvince.hashCode());
		result = prime * result + ((zipOrPostalcode == null) ? 0 : zipOrPostalcode.hashCode());
		result = prime * result + ((country == null) ? 0 : country.hashCode());
		return result;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Location (");

		sb.append(locationId);
		sb.append(", ").append(city);
		sb.append(", ").append(stateOrProvince);
		sb.append(", ").append(zipOrPostalcode);
		sb.append(", ").append(country);

		sb.append(")");
		return sb.toString();
	}
}
